{"ast":null,"code":"// Import the necessary functions from RxJS\nimport { Observable, Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/http-service.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nconst customObservable = new Observable(observer => {\n  let count = 0;\n  const intervalId = setInterval(() => {\n    if (count < 5) {\n      observer.next(count);\n      count++;\n    } else {\n      observer.complete();\n      clearInterval(intervalId);\n    }\n  }, 2000);\n  return () => {\n    clearInterval(intervalId);\n  };\n});\nclass SellerAuthComponent {\n  constructor(http, client, router) {\n    this.http = http;\n    this.client = client;\n    this.router = router;\n    this.customObservableSubscription = new Subscription();\n    console.log(\"mamali\");\n  }\n  ngOnInit() {\n    console.log(\"santosini\");\n    // this.customObservableSubscription = customObservable.subscribe(\n    //   (value) => {\n    //     console.log('Received:', value);\n    //   },\n    //   (error) => {\n    //     console.error('Error:', error);\n    //   },\n    //   () => {\n    //     console.log('Custom Observable completed');\n    //   }\n    // );\n  }\n\n  onSubmit(data) {\n    this.router.navigate(['/seller-home']);\n  }\n}\nSellerAuthComponent.ɵfac = function SellerAuthComponent_Factory(t) {\n  return new (t || SellerAuthComponent)(i0.ɵɵdirectiveInject(i1.HttpServiceService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSellerAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SellerAuthComponent,\n  selectors: [[\"app-seller-auth\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"seller-auth\"], [1, \"sign-up\"], [1, \"common-form\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"name\", \"placeholder\", \"Enter Name\", 1, \"form-input\"], [\"type\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-input\"], [\"type\", \"text\", \"ngModel\", \"\", \"name\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-input\"], [1, \"form-button\"]],\n  template: function SellerAuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Seller Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function SellerAuthComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelement(6, \"input\", 4)(7, \"input\", 5)(8, \"input\", 6);\n      i0.ɵɵelementStart(9, \"button\", 7);\n      i0.ɵɵtext(10, \"SignUp\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵtextInterpolate(ctx.customObservableSubscription);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".sign-up[_ngcontent-%COMP%]{\\n    text-align:center;\\n    margin-bottom:50px;\\n    margin-top:80px;\\n    color:blueviolet\\n}\\n\\n.sign-up[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{\\n    margin-bottom: 45px;\\n    font-weight:bold\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VsbGVyLWF1dGgvc2VsbGVyLWF1dGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmO0FBQ0o7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkI7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5zaWduLXVwe1xyXG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOjUwcHg7XHJcbiAgICBtYXJnaW4tdG9wOjgwcHg7XHJcbiAgICBjb2xvcjpibHVldmlvbGV0XHJcbn1cclxuXHJcbi5zaWduLXVwIGgxe1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNDVweDtcclxuICAgIGZvbnQtd2VpZ2h0OmJvbGRcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { SellerAuthComponent };","map":{"version":3,"names":["Observable","Subscription","customObservable","observer","count","intervalId","setInterval","next","complete","clearInterval","SellerAuthComponent","constructor","http","client","router","customObservableSubscription","console","log","ngOnInit","onSubmit","data","navigate","i0","ɵɵdirectiveInject","i1","HttpServiceService","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","SellerAuthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SellerAuthComponent_Template_form_ngSubmit_4_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","value","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate"],"sources":["D:\\angular\\E-commerce\\website\\src\\app\\seller-auth\\seller-auth.component.ts","D:\\angular\\E-commerce\\website\\src\\app\\seller-auth\\seller-auth.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpServiceService } from '../services/http-service.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n// Import the necessary functions from RxJS\nimport { Observable, Subscription } from 'rxjs';\n\nconst customObservable = new Observable<number>((observer) => {\n  let count = 0;\n  const intervalId = setInterval(() => {\n    if (count < 5) {\n      observer.next(count);\n      count++;\n    } else {\n      observer.complete();\n      clearInterval(intervalId);\n    }\n  }, 2000);\n\n  return () => {\n    clearInterval(intervalId);\n  };\n});\n\n\n\n\n@Component({\n  selector: 'app-seller-auth',\n  templateUrl: './seller-auth.component.html',\n  styleUrls: ['./seller-auth.component.css']\n})\nexport class SellerAuthComponent implements OnInit {\n  customObservableSubscription: Subscription = new Subscription ;\n\n  constructor(private http:HttpServiceService , private client:HttpClient , private router:Router){\n    console.log(\"mamali\");\n\n  }\n\n  ngOnInit() {\n    console.log(\"santosini\");\n    // this.customObservableSubscription = customObservable.subscribe(\n    //   (value) => {\n    //     console.log('Received:', value);\n    //   },\n    //   (error) => {\n    //     console.error('Error:', error);\n    //   },\n    //   () => {\n    //     console.log('Custom Observable completed');\n    //   }\n    // );\n  }\n\n\n  onSubmit(data:object)\n  {\n\n    this.router.navigate(['/seller-home'])\n  }\n\n  // handleButtonClick(event:any) {\n  //   // Handle the button click event here\n  //   console.log( event , 'Button clicked');\n\n  // }\n}\n","<div class=\"seller-auth\">\n  <div class=\"sign-up\">\n    <h1>Seller Sign Up</h1>\n\n    <form (ngSubmit)=\"onSubmit(form.value)\" #form=\"ngForm\" class=\"common-form\">\n      <input class=\"form-input\" type=\"text\" ngModel name=\"name\" placeholder=\"Enter Name\">\n      <input class=\"form-input\" type=\"password\" ngModel name=\"password\" placeholder=\"Enter Password\">\n      <input class=\"form-input\" type=\"text\" ngModel name=\"email\" placeholder=\"Enter Email\">\n      <button class=\"form-button\">SignUp</button>\n    </form>\n\n\n    <!-- <input type=\"text\" (keyup.enter)=\"button.click()\" /> -->\n    <!-- <button  (keydown.enter)=\"$event.preventDefault()\" (click)=\"handleButtonClick($event)\">Click Me</button> -->\n  </div>\n\n  <div>{{customObservableSubscription}}</div>\n</div>"],"mappings":"AAKA;AACA,SAASA,UAAU,EAAEC,YAAY,QAAQ,MAAM;;;;;;AAE/C,MAAMC,gBAAgB,GAAG,IAAIF,UAAU,CAAUG,QAAQ,IAAI;EAC3D,IAAIC,KAAK,GAAG,CAAC;EACb,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAK;IAClC,IAAIF,KAAK,GAAG,CAAC,EAAE;MACbD,QAAQ,CAACI,IAAI,CAACH,KAAK,CAAC;MACpBA,KAAK,EAAE;KACR,MAAM;MACLD,QAAQ,CAACK,QAAQ,EAAE;MACnBC,aAAa,CAACJ,UAAU,CAAC;;EAE7B,CAAC,EAAE,IAAI,CAAC;EAER,OAAO,MAAK;IACVI,aAAa,CAACJ,UAAU,CAAC;EAC3B,CAAC;AACH,CAAC,CAAC;AAKF,MAKaK,mBAAmB;EAG9BC,YAAoBC,IAAuB,EAAWC,MAAiB,EAAWC,MAAa;IAA3E,KAAAF,IAAI,GAAJA,IAAI;IAA8B,KAAAC,MAAM,GAANA,MAAM;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAFxF,KAAAC,4BAA4B,GAAiB,IAAId,YAAY,CAAZ,CAAY;IAG3De,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAEvB;EAEAC,QAAQA,CAAA;IACNF,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAGAE,QAAQA,CAACC,IAAW;IAGlB,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;;AA5BWX,mBAAmB,C;mBAAnBA,mBAAmB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,kBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;AAAnBnB,mBAAmB,C;QAAnBA,mBAAmB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;MCjChCd,EAAA,CAAAgB,cAAA,aAAyB;MAEjBhB,EAAA,CAAAiB,MAAA,qBAAc;MAAAjB,EAAA,CAAAkB,YAAA,EAAK;MAEvBlB,EAAA,CAAAgB,cAAA,iBAA2E;MAArEhB,EAAA,CAAAmB,UAAA,sBAAAC,sDAAA;QAAApB,EAAA,CAAAqB,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAvB,EAAA,CAAAwB,WAAA;QAAA,OAAYxB,EAAA,CAAAyB,WAAA,CAAAV,GAAA,CAAAlB,QAAA,CAAA0B,GAAA,CAAAG,KAAA,CAAoB;MAAA,EAAC;MACrC1B,EAAA,CAAA2B,SAAA,eAAmF;MAGnF3B,EAAA,CAAAgB,cAAA,gBAA4B;MAAAhB,EAAA,CAAAiB,MAAA,cAAM;MAAAjB,EAAA,CAAAkB,YAAA,EAAS;MAQ/ClB,EAAA,CAAAgB,cAAA,WAAK;MAAAhB,EAAA,CAAAiB,MAAA,IAAgC;MAAAjB,EAAA,CAAAkB,YAAA,EAAM;;;MAAtClB,EAAA,CAAA4B,SAAA,IAAgC;MAAhC5B,EAAA,CAAA6B,iBAAA,CAAAd,GAAA,CAAAtB,4BAAA,CAAgC;;;;;;SDiB1BL,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}